version: "3"
services:

    # scheduler & monitoring service
    web:
        container_name: flask_backend1
        build: ./flask
        hostname: flask
        command: sh -c "sleep 10s ; python datalake/app.py"  #so that first database server gets loaded first
        restart: always
        # depends_on:  #before postgres python server wont start  
        #     - postgres
        #     - pgadmin
        #     - sql
        #     - phpmyadmin
        ports:
            - "7007:7007"
        networks:
            - dataworld
        volumes:
            - ./flask:/code
            - ./flask/images :/code
            - ./flask/audio :/code
            - ./flask/text :/code
            - ./flask/pdf :/code
            - ./flask/datalake:/code
    sql:
        hostname: mysqlhost
        container_name: mysql_container
        command: --default-authentication-plugin=mysql_native_password
        image: mysql:latest
        restart: always
        networks:
            - dataworld
        environment: 
            MYSQL_USER: root
            MYSQL_ROOT_PASSWORD: root
            MYSQL_PASSWORD: root
            MYSQL_DATABASE: test_db
        volumes:
            - ./my-db:/var/lib/mysql
        ports:  
            - '3306:3306'
    
    phpmyadmin:
         container_name: phpmyadmin
         image: phpmyadmin/phpmyadmin:latest
         ports:
            - "8082:80"
         networks:
            - dataworld
         environment:
             MYSQL_ROOT_PASSWORD: root #(Required) set the password for the root superuser account.
             PMA_HOST: mysqlhost   # define the address/hostname of the mysql server eg mysql container name.
             PMA_USER: root # this is the root user to login on startup
             PMA_PASSWORD: root # use the root password to login on startup.
    postgres:
        hostname: mypostgres
        container_name: postgres_container
        image: 'postgres:14.1-alpine'  # latest image as of 2021-11-08
        environment:
            POSTGRES_USER: 'postgres'
            POSTGRES_PASSWORD: 'postgres'
            PGDATA: /data/postgres
        volumes:
            - postgres:/data/postgres
        ports:
            - "5432:5432"
        networks:
            - dataworld
        restart: on-failure
        healthcheck:
            test: ["CMD", "pg_isready"]
            interval: 30s
            timeout: 20s
            retries: 3
    # database administration tool
    pgadmin:
        hostname: mypgadmin
        container_name: pgadmin_container
        image: 'dpage/pgadmin4:latest'  # latest image as of 2021-11-08
        environment:
            PGADMIN_DEFAULT_EMAIL: 'pgadmin4@pgadmin.org'
            PGADMIN_DEFAULT_PASSWORD: 'admin'
            PGADMIN_CONFIG_SERVER_MODE: 'False'
        volumes:
            - pgadmin:/var/lib/pgadmin
            - ./images:/usr/local/images
        ports:
            - "5050:80"
        networks:
            - dataworld
        restart: on-failure
        healthcheck:
            test: ["CMD", "curl", "-f", "http://mypgadmin:80/misc/ping"]
            interval: 30s
            timeout: 20s
            retries: 3
    mongodb:
        hostname: mongohost
        container_name: mongo_container
        image: mongo:latest
        networks:
            - dataworld
        ports:
            - '27017:27017'
        volumes:
            - dbdata:/data/db

    mongo_client:
        image: mongoclient/mongoclient
        # host: mongoclient
        networks:
            - dataworld
        restart: always
        ports:
            - '3000:3000'
    minio:
        hostname: myminio
        container_name: minio_container
        image: 'bitnami/minio:2021' # latest image as of 2021-11-08
        environment:
            MINIO_ACCESS_KEY: minio_admin
            MINIO_SECRET_KEY: minio_password
        ports:
            - '9000:9000'
            - '9001:9001'
        volumes:
            - './minio/data:/data'
        networks:
            - dataworld
        healthcheck:
            test: ["CMD", "curl", "-f", "http://myminio:9000/minio/health/live"]
            interval: 30s
            timeout: 20s
            retries: 3

volumes:
    postgres:
    pgadmin:
    flask:
        external : true
    my-db:
    dbdata:

networks:
    dataworld:
        driver: bridge